plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}
android {
    lintOptions {
        abortOnError false
    }
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.appttude.h_mal.atlas_weather"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 5
        versionName "3.0"
        testInstrumentationRunner "com.appttude.h_mal.atlas_weather.application.TestRunner"
        vectorDrawables.useSupportLibrary = true

        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            buildConfigField "String", "ParamOne", properties.getProperty('WEATHER_API')
            buildConfigField "String", "ParamTwo", properties.getProperty('SEARCH_API')
        } else {
            buildConfigField "String", "ParamOne", System.getenv('WEATHER_API')
            buildConfigField "String", "ParamTwo", System.getenv('SEARCH_API')
        }
    }
    android {
        sourceSets {
            test {
                resources.srcDirs += ['src/test/resources']
            }
            androidTest {
                resources.srcDirs += ['src/androidTest/resources']
            }
        }

    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // To inline the bytecode built with JVM target 1.8 into
    // bytecode that is being built with JVM target 1.6. (e.g. navArgs)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                '-Xjvm-default=enable'
        ]
    }

    flavorDimensions "default"
    productFlavors {
        atlasWeather {
            applicationId "com.appttude.h_mal.atlas_weather"
            versionCode 5
            versionName "3.0.0"
        }
        monoWeather {
            applicationId "com.appttude.h_mal.monoWeather"
            versionCode 6
            versionName "4.0.0"
        }
    }
    sourceSets {
        atlasWeather {
            manifest {
                srcFile 'src/atlasWeather/AndroidManifest.xml'
            }
        }
        monoWeather {
            manifest {
                srcFile 'src/monoWeather/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation "com.google.android.gms:play-services-location:21.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'androidx.preference:preference:1.2.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'
    / * Unit testing * /
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    / * Fragment Navigation * /
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    / * android unit testing and espresso * /
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation "androidx.test:core:1.5.0"

    / * Android Espresso * /
    def testJunitVersion = "1.1.5"
    def testRunnerVersion = "1.5.2"
    def espressoVersion = "3.5.1"
    androidTestImplementation "androidx.test.ext:junit:$testJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "org.hamcrest:hamcrest:2.2"
    / * mock websever for testing retrofit responses * /
    testImplementation "com.squareup.okhttp3:mockwebserver:4.6.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    / * mockito and livedata testing * /
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    implementation 'androidx.arch.core:core-testing:2.2.0'

    / * MockK * /
    def mockk_ver = "1.10.5"
    testImplementation "io.mockk:mockk:$mockk_ver"
    androidTestImplementation "io.mockk:mockk-android:$mockk_ver"

    / * Retrofit * /
    def retrofit_ver = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_ver"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    / * Shared prefs * /
    def prefs_ver = "1.2.0"
    implementation "androidx.preference:preference-ktx:$prefs_ver"

    / *Kodein Dependency Injection * /
    def kodein_version = "6.2.1"
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-x:$kodein_version"

    / * Room database * /
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    / * Picasso * /
    implementation 'com.squareup.picasso:picasso:2.71828'

    / * coroutine * /
    def coroutine_version = "1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    / * tomtom search * /
    def tomtom_version = "2.4771"
    implementation "com.tomtom.online:sdk-search:$tomtom_version"
    implementation "com.tomtom.online:sdk-maps:2.4807"

    / * coroutines support for firebase operations * /
    def coroutines_google_ver = "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_google_ver"

    / * Picasso * /
    implementation 'com.squareup.picasso:picasso:2.71828'

    / * screenshot library * /
    androidTestImplementation 'tools.fastlane:screengrab:2.1.1'
}
